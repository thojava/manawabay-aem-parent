version: "3.9"

services:

  ##########################################################
  # AUTHOR START
  ##########################################################
  # update query limit http://localhost:4502/system/console/jmx/org.apache.jackrabbit.oak%3Aname%3Dsettings%2Ctype%3DQueryEngineSettings
  author:
    image: ${AUTHOR_IMAGE}
    hostname: author
    restart: unless-stopped
    healthcheck:
      test: curl -u admin:admin --header Referer:localhost --silent --connect-timeout 5 --max-time 5 http://localhost:8080/system/console/bundles.json | grep -q \"state\":\"Installed\" && exit 1 || exit 0
      interval: 10s
      timeout: 10s
      retries: 20
      start_period: 1s
    ports:
      - ${AUTHOR_PORT}:8080
      - ${AUTHOR_DEBUG_PORT}:58242
    environment:
      - TZ
      - AEM_RUNMODE=-Dsling.run.modes=author,crx3,crx3tar,dev,dynamicmedia_scene7,nosamplecontent
      - AEM_JVM_OPTS=-server -Xms248m -Xmx4524m -XX:MaxDirectMemorySize=256M -XX:+CMSClassUnloadingEnabled -Djava.awt.headless=true -Dorg.apache.felix.http.host=0.0.0.0 -Xdebug -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:58242
      # - AEM_START_OPTS=start -c /aem/crx-quickstart -i launchpad -p 8080 -a 0.0.0.0 -Dsling.properties=conf/sling.properties  -D oak.mongo.uri=${MONGO_URI}
    volumes:
      - author-data:/aem/crx-quickstart/repository
      # keep track of all assets in a volume
      # - author-data:/aem/crx-quickstart/repository/datastore
    depends_on:
      - traefik
      # - mongo
      # - mongoui
    labels:
      # note that you want this frontened to match the last. otherwise it will match login.${HOST_DOMAIN}"
      traefik.frontend.priority: 1
      traefik.enable: true
      traefik.http.routers.author.rule: "Host(`${AUTHOR_HOST}`)"
      traefik.http.routers.author.entrypoints: web
      traefik.http.routers.author_https.rule: "Host(`${AUTHOR_HOST}`)"
      traefik.http.routers.author_https.tls: true
      traefik.http.routers.author_https.entrypoints: websecure
      traefik.http.services.author.loadbalancer.server.port: 8080
      traefik.http.services.author.loadbalancer.passHostHeader: true
    networks:
      - mongo-network
      - author-network
      - publish-network
      - dispatcher-network
      - internal
      - default
  ##########################################################
  # AUTHOR END
  ##########################################################


  ##########################################################
  # PUBLISH START
  ##########################################################
  publish:
    image: ${PUBLISH_IMAGE}
    hostname: publish
    restart: unless-stopped
    healthcheck:
      test: curl -u admin:admin --header Referer:localhost --silent --connect-timeout 5 --max-time 5 http://localhost:8080/system/console/bundles.json | grep -q \"state\":\"Installed\" && exit 1 || exit 0
      interval: 10s
      timeout: 10s
      retries: 20
      start_period: 30s
    ports:
      - ${PUBLISH_PORT}:8080
      - ${PUBLISH_DEBUG_PORT}:58242
    environment:
      - TZ
      - DOMAIN_ENV_MANAWABAY=manawabay.${DISPATCHER_HOST}
      - AEM_RUNMODE=-Dsling.run.modes=publish,crx3,crx3tar,dev,dynamicmedia_scene7,nosamplecontent
      - AEM_JVM_OPTS=-server -Xms248m -Xmx1524m -XX:MaxDirectMemorySize=256M -XX:+CMSClassUnloadingEnabled -Djava.awt.headless=true -Dorg.apache.felix.http.host=0.0.0.0 -Xdebug -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:58242
    labels:
      # note that you want this frontend to match the last. otherwise, it will match login.${HOST_DOMAIN}"
      traefik.frontend.priority: 2
      traefik.enable: true
      traefik.http.routers.publish.rule: "Host(`${PUBLISH_HOST}`)"
      traefik.http.routers.publish.entrypoints: web
      traefik.http.routers.publish_https.rule: "Host(`${PUBLISH_HOST}`)"
      traefik.http.routers.publish_https.tls: true
      traefik.http.routers.publish_https.entrypoints: websecure
      traefik.http.services.publish.loadbalancer.server.port: 8080
      traefik.http.services.publish.loadbalancer.passHostHeader: true
    volumes:
      - publish-data:/aem/crx-quickstart/repository
    networks:
      - publish-network
      - internal
      - default
  ##########################################################
  # PUBLISH END
  ##########################################################

  ##########################################################
  # DISPATCHER START
  ##########################################################
  dispatcher:
    image: ${DISPATCHER_IMAGE}
    hostname: dispatcher
    restart: unless-stopped
    ports:
      - ${DISPATCHER_PORT}:80
    environment:
      - TZ
      - AEM_PORT=8080
      - AEM_HOST=publish
      - DISP_LOG_LEVEL=trace1 #debug
      - ENVIRONMENT_TYPE=LOCAL
      - AEM_PROXY_HOST=proxy
    labels:
      # note that you want this frontend to match the last. otherwise, it will match login.${HOST_DOMAIN}"
      traefik.frontend.priority: 1
      traefik.enable: true
      traefik.http.routers.dispatcher.rule: "HostRegexp(`${DISPATCHER_HOST}`, `{subdomain:[a-z]+}.${DISPATCHER_HOST}`)"
      traefik.http.routers.dispatcher.entrypoints: web
      traefik.http.routers.dispatcher_https.rule: "HostRegexp(`${DISPATCHER_HOST}`, `{subdomain:[a-z]+}.${DISPATCHER_HOST}`)"
      traefik.http.routers.dispatcher_https.tls: true
      traefik.http.routers.dispatcher_https.entrypoints: websecure
      traefik.http.services.dispatcher.loadbalancer.passHostHeader: true
    volumes:
      - ./dispatcher/src/:/mnt/dev/src/
      - ./dispatcher/scripts/fix-symlinks.sh:/docker_entrypoint.d/zzz-fix-symlinks.sh
    depends_on:
      - proxy
    networks:
      - publish-network
      - dispatcher-network
      - internal
      - default
  ##########################################################
  # DISPATCHER END
  ##########################################################

  ##########################################################
  # PROXY START
  ##########################################################
  proxy:
    image: ${PROXY_IMAGE}
    restart: unless-stopped
    hostname: proxy
    labels:
      # note that you want this frontend to match the last. otherwise, it will match login.${HOST_DOMAIN}"
      traefik.frontend.priority: 1
      traefik.enable: true
      traefik.http.routers.proxy.rule: "Host(`${PROXY_HOST}`)"
      traefik.http.routers.proxy.entrypoints: web
      traefik.http.routers.proxy_https.rule: "Host(`${PROXY_HOST}`)"
      traefik.http.routers.proxy_https.tls: true
      traefik.http.routers.proxy_https.entrypoints: websecure
      traefik.http.services.proxy.loadbalancer.passHostHeader: true
      traefik.http.services.proxy.loadbalancer.server.port: 3128
    volumes:
      - ./services/proxy/squid.conf:/etc/squid/squid.conf
    networks:
      - author-network
      - publish-network
      - dispatcher-network
      - internal
      - default
  ##########################################################
  # PROXY END
  ##########################################################


  ##########################################################
  # TRAEFIK START
  ##########################################################
  traefik:
    image: ${TRAEFIK_IMAGE}
    restart: unless-stopped
    hostname: traefik
    environment:
      - TZ
    security_opt:
      - no-new-privileges:true
    command:
      - "--log.level=${TRAEFIK_LOG_LEVEL}"
      - "--accesslog=${TRAEFIK_ACCESS_LOG}"
      - "--api.insecure=true" # Don't do that in production!
      - "--api.dashboard=true" # Don't do that in production!
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--global.sendAnonymousUsage=true"


      # Entrypoints for HTTP, HTTPS, and NX (TCP + UDP)
      - "--entrypoints.web.address=:${TRAEFIK_PORT_HTTP}"
      - "--entrypoints.websecure.address=:${TRAEFIK_PORT_HTTPS}"
      # - "--entrypoints.mongo.address=:${MONGO_PORT}"
      # - "--entrypoints.traefik.address=:${TRAEFIK_PORT_DASHBOARD}"
      # - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      # - "--entrypoints.web.http.redirections.entryPoint.permanent=true"

      # Manual keys
      - "--providers.file.directory=/etc/traefik/dynamic_conf"
      - "--providers.file.watch=true"

    labels:
      traefik.frontend.priority: 1
      traefik.enable: true
      traefik.http.routers.traefikdashboard.rule: "Host(`${TRAEFIK_HOST}`) && ( PathPrefix(`/api`) || PathPrefix(`/dashboard`) )"
      traefik.http.routers.traefikdashboard.entrypoints: web
      traefik.http.routers.traefikdashboard.service: api@internal
      traefik.http.routers.traefikdashboard_https.rule: "Host(`${TRAEFIK_HOST}`) && ( PathPrefix(`/api`) || PathPrefix(`/dashboard`) )"
      traefik.http.routers.traefikdashboard_https.entrypoints: websecure
      traefik.http.routers.traefikdashboard_https.tls: true
      traefik.http.routers.traefikdashboard_https.service: api@internal
      traefik.http.services.traefikdashboard.loadbalancer.server.port: 8080

    ports:
      - ${TRAEFIK_PORT_HTTP}:80
      - ${TRAEFIK_PORT_HTTPS}:443
      - ${TRAEFIK_PORT_DASHBOARD}:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Persist certificates, so we can restart as often as needed
      - ./services/traefik/certs:/letsencrypt
      - ./services/traefik/config/config.yml:/etc/traefik/dynamic_conf/conf.yml:ro

    depends_on:
      createcert:
        condition: service_completed_successfully

    networks:
      - author-network
      - publish-network
      - dispatcher-network
      - internal
      - default

  createcert:
    image: ${CERTS_IMAGE}
    environment:
      - TZ
    command:
      - "${CERTS_COMMAND}"
    volumes:
      - ./services/traefik/certs:/certs
  ##########################################################
  # TRAEFIK END
  ##########################################################


  ##########################################################
  # MONGO START
  ##########################################################
#  mongo:
#    image: ${MONGO_IMAGE}
#    restart: always
#    hostname: mongo
#    security_opt:
#      - no-new-privileges:true
#    volumes:
#      - authormongo-data:/data
#    environment:
#      - TZ
#    #      - MONGO_URI
#    #      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
#    #      - MONGO_INITDB_ROOT_PASSWORD=$(MONGO_PASSWORD)
#    depends_on:
#      - traefik
#    labels:
#      traefik.frontend.priority: 1
#      traefik.enable: true
#      traefik.backend: mongo
##      traefik.tcp.routers.mongo.rule: HostSNI(`*`)
##      traefik.tcp.routers.mongo.entrypoints: mongo
##      traefik.tcp.routers.mongo.service: mongo
##      traefik.tcp.services.mongo.loadbalancer.server.port: 27017
##      traefik.tcp.routers.mongo.middlewares: localhost-ip-whitelist@docker
#    networks:
#      - mongo-network
#      - internal
#
#  mongoui:
#    image: ${MONGOUI_IMAGE}
#    restart: unless-stopped
#    hostname: mongoui
#    security_opt:
#      - no-new-privileges:true
#    environment:
#      - TZ
#      - ME_CONFIG_MONGODB_SERVER=${MONGO_HOST}
#    #      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_USERNAME}
#    #      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_PASSWORD}
#    #      - ME_CONFIG_MONGODB_URL=${MONGO_URI}
#    #      - ME_CONFIG_MONGODB_URL="mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@${MONGO_HOST}:${MONGO_PORT}?directConnection=true"
#    labels:
#      # note that you want this frontened to match the last. otherwise it will match login.${HOST_DOMAIN}"
#      traefik.frontend.priority: 1
#      traefik.enable: true
#      traefik.http.routers.mongoui.rule: "Host(`${MONGOUI_HOST}`)"
#      traefik.http.routers.mongoui.entrypoints: web
#      traefik.http.routers.mongoui_https.rule: "Host(`${MONGOUI_HOST}`)"
#      traefik.http.routers.mongoui_https.tls: true
#      traefik.http.routers.mongoui_https.entrypoints: websecure
#      traefik.http.services.mongoui.loadbalancer.server.port: 8081
#      traefik.http.services.mongoui.loadbalancer.passHostHeader: true
#    depends_on:
#      - traefik
#      - mongo
#    networks:
#      - mongo-network
#      - internal
  ##########################################################
  # MONGO END
  ##########################################################

  ##########################################################
  # DASHBOARD START
  ##########################################################
  dashboardbuild:
    image: ${DASHBOARD_BUILD_IMAGE}
    privileged: true
    environment:
      - TZ
      - JEKYLL_ENV=production
      - DOMAIN_URL
      - GIT_REPO
      - GIT_REPO_ADOBE
      - GIT_REPO_ICON
      - GIT_REPO_TITLE
      - GIT_REPO_ADOBE_ICON
      - GIT_REPO_ADOBE_TITLE
      - TRAEFIK_URL
      - TRAEFIK_PORT_HTTP
      - TRAEFIK_PORT_HTTPS
      - TRAEFIK_PORT_DASHBOARD
      - PROXY_URL
      - MONGOUI_URL
      - AUTHOR_URL
      - AUTHOR_PORT
      - AUTHOR_DEBUG_PORT
      - PUBLISH_URL
      - PUBLISH_PORT
      - PUBLISH_DEBUG_PORT
      - DISPATCHER_URL
      - DASHBOARD_URL
      - DISPATCHER_HOST
      - PAGE_LINKS
      - SHOWCASE_LINKS
      - AUTHOR_LINKS
      - CONSOLE_LINKS
    command: bash /srv/jekyll/build.sh
    volumes:
      - ${DASHBOARD_CONTENT_PATH}:/srv/jekyll:rw

  dashboard:
    image: ${DASHBOARD_IMAGE}
    restart: unless-stopped
    working_dir: /content
    hostname: dashboard
    depends_on:
      - traefik
      - dashboardbuild
    labels:
      traefik.frontend.priority: 1
      traefik.enable: true
      traefik.http.routers.dashboard.rule: "Host(`${DASHBOARD_HOST}`)"
      traefik.http.routers.dashboard.entrypoints: web
      traefik.http.routers.dashboard_https.rule: "Host(`${DASHBOARD_HOST}`)"
      traefik.http.routers.dashboard_https.tls: true
      traefik.http.routers.dashboard_https.entrypoints: websecure
      traefik.http.services.dashboard.loadbalancer.server.port: 80
      traefik.http.services.dashboard.loadbalancer.passHostHeader: true
    volumes:
      - ${DASHBOARD_CONTENT_PATH}/_site:/content
      - ${DASHBOARD_CONFIG_FILE}:/etc/nginx/nginx.conf
    environment:
      - TZ
    networks:
      - internal
  ##########################################################
  # DASHBOARD END
  ##########################################################


networks:
  default:
  internal:
  author-network:
  publish-network:
  dispatcher-network:
  mongo-network:

volumes:
  author-data:
  authormongo-data:
  publish-data:
  dispatcher-data:
  selenium-shared:
